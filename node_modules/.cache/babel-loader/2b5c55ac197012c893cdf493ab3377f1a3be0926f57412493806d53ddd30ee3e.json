{"ast":null,"code":"const fetchMovies = async () => {\n  console.log(\"🎬 fetchMovies() が実行されました！\");\n  console.log(\"選択されたカテゴリー:\", category);\n  console.log(\"現在の query:\", query);\n  console.log(\"現在の API_KEY:\", API_KEY);\n  let url = query ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}` : `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=ja-JP`;\n  console.log(\"リクエストURL:\", url);\n  try {\n    var _data$results;\n    const response = await fetch(url);\n    if (!response.ok) {\n      console.error(`❌ APIリクエスト失敗: ステータスコード ${response.status}`);\n      setMovies([]);\n      return;\n    }\n    const data = await response.json(); // ✅ `data` を取得してからログに出力！\n    console.log(\"✅ APIレスポンスの詳細:\", JSON.stringify(data, null, 2));\n    const movieData = (_data$results = data.results) !== null && _data$results !== void 0 && _data$results.length ? data.results : []; // ✅ `data.results` の存在を確認\n    setMovies(movieData);\n  } catch (error) {\n    console.error(\"❌ 映画データの取得に失敗しました:\", error);\n    setMovies([]);\n  }\n};","map":{"version":3,"names":["fetchMovies","console","log","category","query","API_KEY","url","_data$results","response","fetch","ok","error","status","setMovies","data","json","JSON","stringify","movieData","results","length"],"sources":["C:/Users/loff/phobia-movie-search/src/components/MovieList.js"],"sourcesContent":["const fetchMovies = async () => {\r\n  console.log(\"🎬 fetchMovies() が実行されました！\");\r\n  console.log(\"選択されたカテゴリー:\", category);\r\n  console.log(\"現在の query:\", query);\r\n  console.log(\"現在の API_KEY:\", API_KEY);\r\n\r\n  let url = query\r\n    ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}`\r\n    : `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=ja-JP`;\r\n\r\n  console.log(\"リクエストURL:\", url);\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      console.error(`❌ APIリクエスト失敗: ステータスコード ${response.status}`);\r\n      setMovies([]); \r\n      return;\r\n    }\r\n\r\n    const data = await response.json(); // ✅ `data` を取得してからログに出力！\r\n    console.log(\"✅ APIレスポンスの詳細:\", JSON.stringify(data, null, 2));\r\n\r\n    const movieData = data.results?.length ? data.results : []; // ✅ `data.results` の存在を確認\r\n    setMovies(movieData);\r\n    \r\n  } catch (error) {\r\n    console.error(\"❌ 映画データの取得に失敗しました:\", error);\r\n    setMovies([]);\r\n  }\r\n};"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9BC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EACzCD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEC,QAAQ,CAAC;EACpCF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEE,KAAK,CAAC;EAChCH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,OAAO,CAAC;EAEpC,IAAIC,GAAG,GAAGF,KAAK,GACX,qDAAqDC,OAAO,yBAAyBD,KAAK,EAAE,GAC5F,sCAAsCD,QAAQ,YAAYE,OAAO,iBAAiB;EAEtFJ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEI,GAAG,CAAC;EAE7B,IAAI;IAAA,IAAAC,aAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IAEjC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChBT,OAAO,CAACU,KAAK,CAAC,0BAA0BH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC1DC,SAAS,CAAC,EAAE,CAAC;MACb;IACF;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC,CAAC;IACpCd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEc,IAAI,CAACC,SAAS,CAACH,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAE5D,MAAMI,SAAS,GAAG,CAAAX,aAAA,GAAAO,IAAI,CAACK,OAAO,cAAAZ,aAAA,eAAZA,aAAA,CAAca,MAAM,GAAGN,IAAI,CAACK,OAAO,GAAG,EAAE,CAAC,CAAC;IAC5DN,SAAS,CAACK,SAAS,CAAC;EAEtB,CAAC,CAAC,OAAOP,KAAK,EAAE;IACdV,OAAO,CAACU,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1CE,SAAS,CAAC,EAAE,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}