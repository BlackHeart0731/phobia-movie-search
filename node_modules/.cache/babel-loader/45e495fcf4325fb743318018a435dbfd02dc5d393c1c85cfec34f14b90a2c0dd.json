{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loff\\\\phobia-movie-search\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  category,\n  query\n}) => {\n  _s();\n  console.log(\"üì¶ MovieList „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅåÂëº„Å∞„Çå„Åæ„Åó„ÅüÔºÅ\");\n  const [movies, setMovies] = useState([]);\n  const [visibleCount, setVisibleCount] = useState(8);\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n\n  // ‚úÖ `category` „Åå `undefined` „Å†„Å£„ÅüÂ†¥Âêà„ÅÆ„Éá„Éï„Ç©„É´„ÉàÂÄ§„ÇíË®≠ÂÆö\n  const validatedCategory = category || \"popular\";\n\n  // ‚úÖ `fetchMovies` „Çí `useCallback` „Åß„É°„É¢Âåñ„Åó„Å¶ `useEffect` „ÅÆË≠¶Âëä„ÇíËß£Ê∂à\n  const fetchMovies = useCallback(async () => {\n    console.log(\"üé¨ fetchMovies() „ÅåÂÆüË°å„Åï„Çå„Åæ„Åó„ÅüÔºÅ\");\n    console.log(\"üîç category:\", validatedCategory, \"query:\", query);\n    console.log(\"üîë API_KEY:\", API_KEY);\n    if (!API_KEY) {\n      console.error(\"‚ùå API_KEY „ÅåÂÆöÁæ©„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„ÇìÔºÅ\");\n      return setMovies([]);\n    }\n    const url = query ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}` : `https://api.themoviedb.org/3/movie/${validatedCategory}?api_key=${API_KEY}&language=ja-JP`;\n    console.log(\"üåç „É™„ÇØ„Ç®„Çπ„ÉàURL:\", url);\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        console.error(`‚ùå API„É™„ÇØ„Ç®„Çπ„ÉàÂ§±Êïó: „Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ ${response.status}`);\n        setMovies([]);\n        return;\n      }\n      const data = await response.json();\n      console.log(\"‚úÖ API„É¨„Çπ„Éù„É≥„Çπ:\", data);\n\n      // ‚úÖ `data.results` „ÅåÈÖçÂàó„Åã„Å©„ÅÜ„Åã„Çí‰øùË®º\n      setMovies(Array.isArray(data === null || data === void 0 ? void 0 : data.results) ? data.results : []);\n    } catch (error) {\n      console.error(\"‚ö†Ô∏è Êò†Áîª„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:\", error);\n      setMovies([]);\n    }\n  }, [validatedCategory, query, API_KEY]);\n  useEffect(() => {\n    console.log(\"üëÄ useEffect Áô∫ÂãïÔºÅ\");\n    fetchMovies();\n  }, [fetchMovies]);\n  console.log(\"üéûÔ∏è ÁèæÂú®„ÅÆ movies:\", movies);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        color: \"limegreen\"\n      },\n      children: JSON.stringify(movies, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), Array.isArray(movies) && movies.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [movies.slice(0, visibleCount).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"https://via.placeholder.com/500\",\n          alt: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u2B50 \", movie.vote_average]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setVisibleCount(prev => prev + 8),\n        children: \"\\u3082\\u3063\\u3068\\u898B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"\\u26A0\\uFE0F \\u6620\\u753B\\u30C7\\u30FC\\u30BF\\u304C\\u53D6\\u5F97\\u3067\\u304D\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"LKiODgMTldYp7g+j9nzVKQBqLzY=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieList","category","query","_s","console","log","movies","setMovies","visibleCount","setVisibleCount","API_KEY","process","env","REACT_APP_TMDB_API_KEY","validatedCategory","fetchMovies","error","url","response","fetch","ok","status","data","json","Array","isArray","results","className","children","style","color","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","length","slice","map","movie","src","poster_path","alt","title","vote_average","id","onClick","prev","_c","$RefreshReg$"],"sources":["C:/Users/loff/phobia-movie-search/src/components/MovieList.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\n\r\nconst MovieList = ({ category, query }) => {\r\n  console.log(\"üì¶ MovieList „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅåÂëº„Å∞„Çå„Åæ„Åó„ÅüÔºÅ\");\r\n\r\n  const [movies, setMovies] = useState([]);\r\n  const [visibleCount, setVisibleCount] = useState(8);\r\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\n  // ‚úÖ `category` „Åå `undefined` „Å†„Å£„ÅüÂ†¥Âêà„ÅÆ„Éá„Éï„Ç©„É´„ÉàÂÄ§„ÇíË®≠ÂÆö\r\n  const validatedCategory = category || \"popular\";\r\n\r\n  // ‚úÖ `fetchMovies` „Çí `useCallback` „Åß„É°„É¢Âåñ„Åó„Å¶ `useEffect` „ÅÆË≠¶Âëä„ÇíËß£Ê∂à\r\n  const fetchMovies = useCallback(async () => {\r\n    console.log(\"üé¨ fetchMovies() „ÅåÂÆüË°å„Åï„Çå„Åæ„Åó„ÅüÔºÅ\");\r\n    console.log(\"üîç category:\", validatedCategory, \"query:\", query);\r\n    console.log(\"üîë API_KEY:\", API_KEY);\r\n\r\n    if (!API_KEY) {\r\n      console.error(\"‚ùå API_KEY „ÅåÂÆöÁæ©„Åï„Çå„Å¶„ÅÑ„Åæ„Åõ„ÇìÔºÅ\");\r\n      return setMovies([]);\r\n    }\r\n\r\n    const url = query\r\n      ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}`\r\n      : `https://api.themoviedb.org/3/movie/${validatedCategory}?api_key=${API_KEY}&language=ja-JP`;\r\n\r\n    console.log(\"üåç „É™„ÇØ„Ç®„Çπ„ÉàURL:\", url);\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        console.error(`‚ùå API„É™„ÇØ„Ç®„Çπ„ÉàÂ§±Êïó: „Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ ${response.status}`);\r\n        setMovies([]);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"‚úÖ API„É¨„Çπ„Éù„É≥„Çπ:\", data);\r\n\r\n      // ‚úÖ `data.results` „ÅåÈÖçÂàó„Åã„Å©„ÅÜ„Åã„Çí‰øùË®º\r\n      setMovies(Array.isArray(data?.results) ? data.results : []);\r\n    } catch (error) {\r\n      console.error(\"‚ö†Ô∏è Êò†Áîª„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:\", error);\r\n      setMovies([]);\r\n    }\r\n  }, [validatedCategory, query, API_KEY]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"üëÄ useEffect Áô∫ÂãïÔºÅ\");\r\n    fetchMovies();\r\n  }, [fetchMovies]);\r\n\r\n  console.log(\"üéûÔ∏è ÁèæÂú®„ÅÆ movies:\", movies);\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {/* ‚úÖ JSON„Éá„Éº„Çø„ÇíÂº∑Âà∂Ë°®Á§∫„Åó„Å¶„Éá„Éê„ÉÉ„Ç∞Áî®„Å´ÂèØË¶ñÂåñ */}\r\n      <pre style={{ color: \"limegreen\" }}>{JSON.stringify(movies, null, 2)}</pre>\r\n\r\n      {Array.isArray(movies) && movies.length > 0 ? (\r\n        <>\r\n          {movies.slice(0, visibleCount).map((movie) => (\r\n            <div key={movie.id} className=\"movie-card\">\r\n              <img\r\n                src={\r\n                  movie.poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n                    : \"https://via.placeholder.com/500\"\r\n                }\r\n                alt={movie.title}\r\n              />\r\n              <h3>{movie.title}</h3>\r\n              <p>‚≠ê {movie.vote_average}</p>\r\n            </div>\r\n          ))}\r\n          <button onClick={() => setVisibleCount((prev) => prev + 8)}>\r\n            „ÇÇ„Å£„Å®Ë¶ã„Çã\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <p style={{ color: \"red\" }}>‚ö†Ô∏è Êò†Áîª„Éá„Éº„Çø„ÅåÂèñÂæó„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇ</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}