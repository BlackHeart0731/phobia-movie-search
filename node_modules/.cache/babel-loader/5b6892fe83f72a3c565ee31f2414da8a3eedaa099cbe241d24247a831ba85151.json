{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loff\\\\phobia-movie-search\\\\src\\\\MovieCategories.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst categories = [{\n  id: \"upcoming\",\n  title: \"公開予定の映画\",\n  endpoint: \"upcoming\"\n}, {\n  id: \"nowPlaying\",\n  title: \"上映中の映画\",\n  endpoint: \"now_playing\"\n}, {\n  id: \"popular\",\n  title: \"話題の映画\",\n  endpoint: \"popular\"\n}, {\n  id: \"topRated\",\n  title: \"評価の高い映画\",\n  endpoint: \"top_rated\"\n}];\nconst MovieCategories = () => {\n  _s();\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n  const [movies, setMovies] = useState({});\n  const [visibleCount, setVisibleCount] = useState({});\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const responses = await Promise.all(categories.map(cat => axios.get(`https://api.themoviedb.org/3/movie/${cat.endpoint}?api_key=${API_KEY}&language=ja-JP&page=1`)));\n        const newMovies = {};\n        const newVisibleCount = {};\n        categories.forEach((cat, index) => {\n          newMovies[cat.id] = responses[index].data.results;\n          newVisibleCount[cat.id] = 8;\n        });\n        setMovies(newMovies);\n        setVisibleCount(newVisibleCount);\n      } catch (error) {\n        console.error(\"映画データの取得に失敗しました\", error);\n      }\n    };\n    fetchMovies();\n  }, []);\n  const showMoreMovies = categoryId => {\n    setVisibleCount(prev => ({\n      ...prev,\n      [categoryId]: prev[categoryId] + 8\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: categories.map(cat => {\n      var _movies$cat$id;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: cat.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-list\",\n          children: (movies[cat.id] || []).slice(0, visibleCount[cat.id] || 0).map(movie => {\n            var _movie$release_date;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"movie-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n                alt: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [movie.title, \" (\", (_movie$release_date = movie.release_date) === null || _movie$release_date === void 0 ? void 0 : _movie$release_date.substring(0, 4), \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)]\n            }, movie.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), (visibleCount[cat.id] || 0) < (((_movies$cat$id = movies[cat.id]) === null || _movies$cat$id === void 0 ? void 0 : _movies$cat$id.length) || 0) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"load-more\",\n          onClick: () => showMoreMovies(cat.id),\n          children: \"\\u3082\\u3063\\u3068\\u898B\\u308B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, cat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieCategories, \"W4MocU+zS9/qNSSGiLkqDR8idA4=\");\n_c = MovieCategories;\nexport default MovieCategories;\nvar _c;\n$RefreshReg$(_c, \"MovieCategories\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","categories","id","title","endpoint","MovieCategories","_s","API_KEY","process","env","REACT_APP_TMDB_API_KEY","movies","setMovies","visibleCount","setVisibleCount","fetchMovies","responses","Promise","all","map","cat","get","newMovies","newVisibleCount","forEach","index","data","results","error","console","showMoreMovies","categoryId","prev","children","_movies$cat$id","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","movie","_movie$release_date","src","poster_path","alt","release_date","substring","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/loff/phobia-movie-search/src/MovieCategories.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst categories = [\r\n  { id: \"upcoming\", title: \"公開予定の映画\", endpoint: \"upcoming\" },\r\n  { id: \"nowPlaying\", title: \"上映中の映画\", endpoint: \"now_playing\" },\r\n  { id: \"popular\", title: \"話題の映画\", endpoint: \"popular\" },\r\n  { id: \"topRated\", title: \"評価の高い映画\", endpoint: \"top_rated\" }\r\n];\r\n\r\nconst MovieCategories = () => {\r\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n  const [movies, setMovies] = useState({});\r\n  const [visibleCount, setVisibleCount] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const responses = await Promise.all(\r\n          categories.map(cat =>\r\n            axios.get(`https://api.themoviedb.org/3/movie/${cat.endpoint}?api_key=${API_KEY}&language=ja-JP&page=1`)\r\n          )\r\n        );\r\n\r\n        const newMovies = {};\r\n        const newVisibleCount = {};\r\n        categories.forEach((cat, index) => {\r\n          newMovies[cat.id] = responses[index].data.results;\r\n          newVisibleCount[cat.id] = 8;\r\n        });\r\n\r\n        setMovies(newMovies);\r\n        setVisibleCount(newVisibleCount);\r\n      } catch (error) {\r\n        console.error(\"映画データの取得に失敗しました\", error);\r\n      }\r\n    };\r\n\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const showMoreMovies = categoryId => {\r\n    setVisibleCount(prev => ({\r\n      ...prev,\r\n      [categoryId]: prev[categoryId] + 8\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {categories.map(cat => (\r\n        <div key={cat.id}>\r\n          <h2>{cat.title}</h2>\r\n          <div className=\"movie-list\">\r\n            {(movies[cat.id] || []).slice(0, visibleCount[cat.id] || 0).map(movie => (\r\n              <div key={movie.id} className=\"movie-item\">\r\n                <img src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} />\r\n                <h3>{movie.title} ({movie.release_date?.substring(0, 4)})</h3>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {(visibleCount[cat.id] || 0) < (movies[cat.id]?.length || 0) && (\r\n            <button className=\"load-more\" onClick={() => showMoreMovies(cat.id)}>もっと見る</button>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCategories;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}