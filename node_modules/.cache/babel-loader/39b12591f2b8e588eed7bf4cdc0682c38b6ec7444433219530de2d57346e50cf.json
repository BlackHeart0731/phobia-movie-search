{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loff\\\\phobia-movie-search\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  category,\n  query\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [visibleCount, setVisibleCount] = useState(8); // ‚úÖ ÊúÄÂàù„ÅÆË°®Á§∫Êï∞\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n  const fetchMovies = async () => {\n    console.log(\"ÈÅ∏Êäû„Åï„Çå„Åü„Ç´„ÉÜ„Ç¥„É™„Éº:\", category); // ‚úÖ „Ç´„ÉÜ„Ç¥„É™„ÉºÁ¢∫Ë™ç\n\n    let url = query ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}` : `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=ja-JP`;\n    console.log(\"„É™„ÇØ„Ç®„Çπ„ÉàURL:\", url); // ‚úÖ API„Å´ÈÄÅ„ÇãURLÁ¢∫Ë™ç\n\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(\"API„É¨„Çπ„Éù„É≥„Çπ:\", data); // ‚úÖ API„É¨„Çπ„Éù„É≥„ÇπÁ¢∫Ë™ç\n      setMovies(data.results || []); // üîπ `data.results` „Åå `undefined` „ÅÆÂ†¥Âêà„Å´ÂÇô„Åà„Çã\n    } catch (error) {\n      console.error(\"Êò†Áîª„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü\", error);\n      setMovies([]); // üîπ „Ç®„É©„ÉºÊôÇ„Å´ `movies` „ÇíÁ©∫ÈÖçÂàó„Å´„Åô„Çã\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [category, query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: [console.log(\"ÂèñÂæó„Åó„ÅüÊò†Áîª„Éá„Éº„Çø:\", movies), \" \", movies.slice(0, visibleCount).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"‰ª£ÊõøÁîªÂÉèURL\",\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u2B50 \", movie.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), visibleCount < movies.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"load-more\",\n      onClick: () => setVisibleCount(visibleCount + 8),\n      children: \"\\u3082\\u3063\\u3068\\u898B\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"mw2a2T8EBVSPmIkz7/z/KRoDOt0=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MovieList","category","query","_s","movies","setMovies","visibleCount","setVisibleCount","API_KEY","process","env","REACT_APP_TMDB_API_KEY","fetchMovies","console","log","url","response","fetch","data","json","results","error","className","children","slice","map","movie","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","vote_average","id","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/loff/phobia-movie-search/src/components/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst MovieList = ({ category, query }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [visibleCount, setVisibleCount] = useState(8); // ‚úÖ ÊúÄÂàù„ÅÆË°®Á§∫Êï∞\r\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n\r\n  const fetchMovies = async () => {\r\n    console.log(\"ÈÅ∏Êäû„Åï„Çå„Åü„Ç´„ÉÜ„Ç¥„É™„Éº:\", category); // ‚úÖ „Ç´„ÉÜ„Ç¥„É™„ÉºÁ¢∫Ë™ç\r\n\r\n    let url = query\r\n      ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}`\r\n      : `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=ja-JP`;\r\n\r\n    console.log(\"„É™„ÇØ„Ç®„Çπ„ÉàURL:\", url); // ‚úÖ API„Å´ÈÄÅ„ÇãURLÁ¢∫Ë™ç\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      console.log(\"API„É¨„Çπ„Éù„É≥„Çπ:\", data); // ‚úÖ API„É¨„Çπ„Éù„É≥„ÇπÁ¢∫Ë™ç\r\n      setMovies(data.results || []); // üîπ `data.results` „Åå `undefined` „ÅÆÂ†¥Âêà„Å´ÂÇô„Åà„Çã\r\n    } catch (error) {\r\n      console.error(\"Êò†Áîª„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü\", error);\r\n      setMovies([]); // üîπ „Ç®„É©„ÉºÊôÇ„Å´ `movies` „ÇíÁ©∫ÈÖçÂàó„Å´„Åô„Çã\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [category, query]);\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {console.log(\"ÂèñÂæó„Åó„ÅüÊò†Áîª„Éá„Éº„Çø:\", movies)} {/* ‚úÖ „Ç≥„É≥„ÇΩ„Éº„É´„É≠„Ç∞„ÅßÁ¢∫Ë™ç */}\r\n\r\n      {movies.slice(0, visibleCount).map((movie) => (\r\n        <div key={movie.id} className=\"movie-card\">\r\n          <img src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"‰ª£ÊõøÁîªÂÉèURL\"} alt={movie.title} />\r\n          <h3>{movie.title}</h3>\r\n          <p>‚≠ê {movie.vote_average}</p>\r\n        </div>\r\n      ))}\r\n\r\n      {visibleCount < movies.length && (\r\n        <button className=\"load-more\" onClick={() => setVisibleCount(visibleCount + 8)}>\r\n          „ÇÇ„Å£„Å®Ë¶ã„Çã\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}