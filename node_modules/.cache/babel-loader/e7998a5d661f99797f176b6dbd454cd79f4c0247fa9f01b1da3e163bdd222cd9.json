{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loff\\\\phobia-movie-search\\\\src\\\\components\\\\ScaryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./ScaryForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fearOptions = [\"高所\", \"閉所\", \"暗所\", \"蜘蛛\", \"蝶\", \"蟻\", \"昆虫\", \"蛙\", \"ヘビ\", \"集合体\", \"血液描写\", \"水・溺水\", \"雷\", \"嘔吐\", \"注射・先端\", \"ピエロ\", \"幽霊・超常現象\", \"性的シーン\", \"死体\", \"その他（自由記述）\"];\nconst ScaryForm = ({\n  onAdd\n}) => {\n  _s();\n  const [selectedFears, setSelectedFears] = useState([]);\n  const [otherText, setOtherText] = useState(\"\");\n  const [detail, setDetail] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const toggleFear = fear => {\n    if (selectedFears.includes(fear)) {\n      setSelectedFears(selectedFears.filter(f => f !== fear));\n    } else {\n      setSelectedFears([...selectedFears, fear]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!detail.trim()) {\n      alert(\"詳細は必須です\");\n      return;\n    }\n    const types = [...selectedFears];\n    if (otherText.trim()) types.push(otherText.trim());\n    const report = {\n      types,\n      detail,\n      time: time.trim()\n    };\n    try {\n      const response = await fetch(\"http://localhost:3001/fear_reports\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(report)\n      });\n      if (response.ok) {\n        alert(\"恐怖要素を報告しました！\");\n        setSelectedFears([]);\n        setOtherText(\"\");\n        setDetail(\"\");\n        setTime(\"\");\n        if (onAdd) onAdd(report);\n      } else {\n        alert(\"送信に失敗しました\");\n      }\n    } catch (error) {\n      alert(\"通信エラーが発生しました\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"\\u6050\\u6016\\u8981\\u7D20\\u3092\\u5831\\u544A\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.checkboxGrid,\n      children: fearOptions.map(fear => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.checkboxLabel,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedFears.includes(fear),\n          onChange: () => toggleFear(fear)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), fear]\n      }, fear, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u305D\\u306E\\u4ED6\\uFF08\\u81EA\\u7531\\u8A18\\u8FF0\\uFF09\",\n      value: otherText,\n      onChange: e => setOtherText(e.target.value),\n      className: styles.inputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u8A73\\u7D30\\uFF08\\u5FC5\\u9808\\uFF09\",\n      value: detail,\n      onChange: e => setDetail(e.target.value),\n      required: true,\n      className: styles.inputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u51FA\\u73FE\\u6642\\u9593\\uFF08\\u4EFB\\u610F\\uFF09 \\u4F8B: 01:23\",\n      value: time,\n      onChange: e => setTime(e.target.value),\n      className: styles.inputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: styles.submitButton,\n      children: \"\\u8FFD\\u52A0\\u3059\\u308B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ScaryForm, \"8mM45DkfzC/0kAlMTeiwexA+w/o=\");\n_c = ScaryForm;\nexport default ScaryForm;\nvar _c;\n$RefreshReg$(_c, \"ScaryForm\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","fearOptions","ScaryForm","onAdd","_s","selectedFears","setSelectedFears","otherText","setOtherText","detail","setDetail","time","setTime","toggleFear","fear","includes","filter","f","handleSubmit","e","preventDefault","trim","alert","types","push","report","response","fetch","method","headers","body","JSON","stringify","ok","error","console","className","form","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","checkboxGrid","map","checkboxLabel","type","checked","onChange","placeholder","value","target","inputText","required","submitButton","_c","$RefreshReg$"],"sources":["C:/Users/loff/phobia-movie-search/src/components/ScaryForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./ScaryForm.module.css\";\r\n\r\nconst fearOptions = [\r\n  \"高所\",\"閉所\",\"暗所\",\"蜘蛛\",\"蝶\",\"蟻\",\"昆虫\",\"蛙\",\"ヘビ\",\"集合体\",\r\n  \"血液描写\",\"水・溺水\",\"雷\",\"嘔吐\",\"注射・先端\",\"ピエロ\",\"幽霊・超常現象\",\r\n  \"性的シーン\",\"死体\",\"その他（自由記述）\"\r\n];\r\n\r\nconst ScaryForm = ({ onAdd }) => {\r\n  const [selectedFears, setSelectedFears] = useState([]);\r\n  const [otherText, setOtherText] = useState(\"\");\r\n  const [detail, setDetail] = useState(\"\");\r\n  const [time, setTime] = useState(\"\");\r\n\r\n  const toggleFear = (fear) => {\r\n    if (selectedFears.includes(fear)) {\r\n      setSelectedFears(selectedFears.filter(f => f !== fear));\r\n    } else {\r\n      setSelectedFears([...selectedFears, fear]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!detail.trim()) {\r\n      alert(\"詳細は必須です\");\r\n      return;\r\n    }\r\n\r\n    const types = [...selectedFears];\r\n    if (otherText.trim()) types.push(otherText.trim());\r\n\r\n    const report = { types, detail, time: time.trim() };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/fear_reports\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(report),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert(\"恐怖要素を報告しました！\");\r\n        setSelectedFears([]);\r\n        setOtherText(\"\");\r\n        setDetail(\"\");\r\n        setTime(\"\");\r\n        if (onAdd) onAdd(report);\r\n      } else {\r\n        alert(\"送信に失敗しました\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"通信エラーが発生しました\");\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <h4>恐怖要素を報告する</h4>\r\n      <div className={styles.checkboxGrid}>\r\n        {fearOptions.map(fear => (\r\n          <label key={fear} className={styles.checkboxLabel}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={selectedFears.includes(fear)}\r\n              onChange={() => toggleFear(fear)}\r\n            />\r\n            {fear}\r\n          </label>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"その他（自由記述）\"\r\n        value={otherText}\r\n        onChange={e => setOtherText(e.target.value)}\r\n        className={styles.inputText}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"詳細（必須）\"\r\n        value={detail}\r\n        onChange={e => setDetail(e.target.value)}\r\n        required\r\n        className={styles.inputText}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"出現時間（任意） 例: 01:23\"\r\n        value={time}\r\n        onChange={e => setTime(e.target.value)}\r\n        className={styles.inputText}\r\n      />\r\n      <button type=\"submit\" className={styles.submitButton}>追加する</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ScaryForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}