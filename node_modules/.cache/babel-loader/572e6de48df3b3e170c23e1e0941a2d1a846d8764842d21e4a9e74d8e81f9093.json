{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loff\\\\phobia-movie-search\\\\src\\\\components\\\\MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieList = ({\n  category,\n  query\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [visibleCount, setVisibleCount] = useState(8); // ‚úÖ ÊúÄÂàù„ÅÆË°®Á§∫Êï∞\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\n  console.log(\"ÁèæÂú®„ÅÆ API_KEY:\", API_KEY); // ‚úÖ API„Ç≠„Éº„Åå `undefined` „Å´„Å™„Å£„Å¶„ÅÑ„Å™„ÅÑ„ÅãÁ¢∫Ë™ç\n\n  const fetchMovies = async () => {\n    console.log(\"üé¨ fetchMovies() „ÅåÂÆüË°å„Åï„Çå„Åæ„Åó„ÅüÔºÅ\");\n    console.log(\"ÈÅ∏Êäû„Åï„Çå„Åü„Ç´„ÉÜ„Ç¥„É™„Éº:\", category);\n    console.log(\"ÁèæÂú®„ÅÆ query:\", query);\n    console.log(\"ÁèæÂú®„ÅÆ API_KEY:\", API_KEY);\n    let url = query ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}` : `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=ja-JP`;\n    console.log(\"„É™„ÇØ„Ç®„Çπ„ÉàURL:\", url);\n    try {\n      const response = await fetch(url);\n      if (!response.ok) {\n        console.error(`‚ùå API„É™„ÇØ„Ç®„Çπ„ÉàÂ§±Êïó: „Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ ${response.status}`);\n        setMovies([]);\n        return;\n      }\n      const data = await response.json();\n      console.log(\"‚úÖ API„É¨„Çπ„Éù„É≥„Çπ:\", data);\n      setMovies(data.results || []);\n    } catch (error) {\n      console.error(\"‚ùå Êò†Áîª„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:\", error);\n      setMovies([]);\n    }\n  };\n  useEffect(() => {\n    fetchMovies();\n  }, [category, query]);\n  useEffect(() => {\n    if ((movies === null || movies === void 0 ? void 0 : movies.length) > 0) {\n      console.log(\"‚úÖ ÂèñÂæó„Åó„ÅüÊò†Áîª„Éá„Éº„Çø:\", movies);\n    } else {\n      console.warn(\"‚ö†Ô∏è Êò†Áîª„Éá„Éº„Çø„ÅåÁ©∫„Åß„Åô„ÄÇ„É™„ÇØ„Ç®„Çπ„ÉàURL„ÇÑAPI„Ç≠„Éº„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºÅ\");\n    }\n  }, [movies]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-list\",\n    children: (movies === null || movies === void 0 ? void 0 : movies.length) > 0 ? movies.slice(0, visibleCount).map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"https://via.placeholder.com/500\",\n        alt: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: movie.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u2B50 \", movie.vote_average]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, movie.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u26A0\\uFE0F \\u6620\\u753B\\u30C7\\u30FC\\u30BF\\u304C\\u53D6\\u5F97\\u3067\\u304D\\u307E\\u305B\\u3093\\u3067\\u3057\\u305F\\u3002API\\u30AD\\u30FC\\u3084\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u78BA\\u8A8D\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieList, \"pylvkVtd+qcZePHwHFvPef5qQdI=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MovieList","category","query","_s","movies","setMovies","visibleCount","setVisibleCount","API_KEY","process","env","REACT_APP_TMDB_API_KEY","console","log","fetchMovies","url","response","fetch","ok","error","status","data","json","results","length","warn","className","children","slice","map","movie","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","vote_average","id","_c","$RefreshReg$"],"sources":["C:/Users/loff/phobia-movie-search/src/components/MovieList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst MovieList = ({ category, query }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [visibleCount, setVisibleCount] = useState(8); // ‚úÖ ÊúÄÂàù„ÅÆË°®Á§∫Êï∞\r\n  const API_KEY = process.env.REACT_APP_TMDB_API_KEY;\r\n  console.log(\"ÁèæÂú®„ÅÆ API_KEY:\", API_KEY); // ‚úÖ API„Ç≠„Éº„Åå `undefined` „Å´„Å™„Å£„Å¶„ÅÑ„Å™„ÅÑ„ÅãÁ¢∫Ë™ç\r\n\r\n  const fetchMovies = async () => {\r\n    console.log(\"üé¨ fetchMovies() „ÅåÂÆüË°å„Åï„Çå„Åæ„Åó„ÅüÔºÅ\");\r\n    console.log(\"ÈÅ∏Êäû„Åï„Çå„Åü„Ç´„ÉÜ„Ç¥„É™„Éº:\", category);\r\n    console.log(\"ÁèæÂú®„ÅÆ query:\", query);\r\n    console.log(\"ÁèæÂú®„ÅÆ API_KEY:\", API_KEY);\r\n\r\n    let url = query\r\n      ? `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=ja-JP&query=${query}`\r\n      : `https://api.themoviedb.org/3/movie/${category}?api_key=${API_KEY}&language=ja-JP`;\r\n\r\n    console.log(\"„É™„ÇØ„Ç®„Çπ„ÉàURL:\", url);\r\n\r\n    try {\r\n      const response = await fetch(url);\r\n\r\n      if (!response.ok) {\r\n        console.error(`‚ùå API„É™„ÇØ„Ç®„Çπ„ÉàÂ§±Êïó: „Çπ„ÉÜ„Éº„Çø„Çπ„Ç≥„Éº„Éâ ${response.status}`);\r\n        setMovies([]);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"‚úÖ API„É¨„Çπ„Éù„É≥„Çπ:\", data);\r\n\r\n      setMovies(data.results || []);\r\n    } catch (error) {\r\n      console.error(\"‚ùå Êò†Áîª„Éá„Éº„Çø„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü:\", error);\r\n      setMovies([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, [category, query]);\r\n\r\n  useEffect(() => {\r\n    if (movies?.length > 0) {\r\n      console.log(\"‚úÖ ÂèñÂæó„Åó„ÅüÊò†Áîª„Éá„Éº„Çø:\", movies);\r\n    } else {\r\n      console.warn(\"‚ö†Ô∏è Êò†Áîª„Éá„Éº„Çø„ÅåÁ©∫„Åß„Åô„ÄÇ„É™„ÇØ„Ç®„Çπ„ÉàURL„ÇÑAPI„Ç≠„Éº„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºÅ\");\r\n    }\r\n  }, [movies]);\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      {movies?.length > 0 ? (\r\n        movies.slice(0, visibleCount).map((movie) => (\r\n          <div key={movie.id} className=\"movie-card\">\r\n            <img \r\n              src={movie.poster_path \r\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` \r\n                : \"https://via.placeholder.com/500\"} \r\n              alt={movie.title} \r\n            />\r\n            <h3>{movie.title}</h3>\r\n            <p>‚≠ê {movie.vote_average}</p>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>‚ö†Ô∏è Êò†Áîª„Éá„Éº„Çø„ÅåÂèñÂæó„Åß„Åç„Åæ„Åõ„Çì„Åß„Åó„Åü„ÄÇAPI„Ç≠„Éº„ÇÑ„Ç´„ÉÜ„Ç¥„É™„Éº„ÇíÁ¢∫Ë™ç„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAMW,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAClDC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,OAAO,CAAC,CAAC,CAAC;;EAEtC,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEZ,QAAQ,CAAC;IACpCW,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEX,KAAK,CAAC;IAChCU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEL,OAAO,CAAC;IAEpC,IAAIO,GAAG,GAAGb,KAAK,GACX,qDAAqDM,OAAO,yBAAyBN,KAAK,EAAE,GAC5F,sCAAsCD,QAAQ,YAAYO,OAAO,iBAAiB;IAEtFI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEE,GAAG,CAAC;IAE7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAEjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChBN,OAAO,CAACO,KAAK,CAAC,0BAA0BH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC1Df,SAAS,CAAC,EAAE,CAAC;QACb;MACF;MAEA,MAAMgB,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCV,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEQ,IAAI,CAAC;MAEhChB,SAAS,CAACgB,IAAI,CAACE,OAAO,IAAI,EAAE,CAAC;IAC/B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1Cd,SAAS,CAAC,EAAE,CAAC;IACf;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACdkB,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACb,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErBN,SAAS,CAAC,MAAM;IACd,IAAI,CAAAQ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoB,MAAM,IAAG,CAAC,EAAE;MACtBZ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAET,MAAM,CAAC;IACrC,CAAC,MAAM;MACLQ,OAAO,CAACa,IAAI,CAAC,uCAAuC,CAAC;IACvD;EACF,CAAC,EAAE,CAACrB,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxB,CAAAvB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoB,MAAM,IAAG,CAAC,GACjBpB,MAAM,CAACwB,KAAK,CAAC,CAAC,EAAEtB,YAAY,CAAC,CAACuB,GAAG,CAAEC,KAAK,iBACtC/B,OAAA;MAAoB2B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACxC5B,OAAA;QACEgC,GAAG,EAAED,KAAK,CAACE,WAAW,GAClB,kCAAkCF,KAAK,CAACE,WAAW,EAAE,GACrD,iCAAkC;QACtCC,GAAG,EAAEH,KAAK,CAACI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eACFvC,OAAA;QAAA4B,QAAA,EAAKG,KAAK,CAACI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBvC,OAAA;QAAA4B,QAAA,GAAG,SAAE,EAACG,KAAK,CAACS,YAAY;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GARrBR,KAAK,CAACU,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASb,CACN,CAAC,gBAEFvC,OAAA;MAAA4B,QAAA,EAAG;IAAyC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAChD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CArEIH,SAAS;AAAAyC,EAAA,GAATzC,SAAS;AAuEf,eAAeA,SAAS;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}