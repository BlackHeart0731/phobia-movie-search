{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\loff\\\\phobia-movie-search\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport CategoryList from \"./components/CategoryList\";\nimport MovieList from \"./components/MovieList\";\nimport \"./styles.css\";\nimport \"./App.css\";\n// App.jsなどJSファイルの先頭で\nimport cinecaptionTTF from './fonts/cinecaption226.ttf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fontFace = `\n@font-face {\n  font-family: \"Cinecaption\";\n  src: url(${cinecaptionTTF}) format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n`;\n\n// これをstyleタグとしてDOMに注入するなどで使う\n\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // フォントを動的にstyleタグで挿入する処理\n  useEffect(() => {\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      @font-face {\n        font-family: \"Cinecaption\";\n        src: url(${cinecaptionTTF}) format(\"truetype\");\n        font-weight: normal;\n        font-style: normal;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // クリーンアップ（念のため）\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n  const handleSearch = query => {\n    setSearchQuery(query);\n    console.log(\"検索されたタイトル:\", query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      category: \"popular\",\n      query: searchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"sVq1p5a4ls6geX75CXYzyYCyR5M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","SearchBar","CategoryList","MovieList","cinecaptionTTF","jsxDEV","_jsxDEV","fontFace","App","_s","searchQuery","setSearchQuery","style","document","createElement","textContent","head","appendChild","removeChild","handleSearch","query","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","category","_c","$RefreshReg$"],"sources":["C:/Users/loff/phobia-movie-search/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport CategoryList from \"./components/CategoryList\";\nimport MovieList from \"./components/MovieList\";\nimport \"./styles.css\";\nimport \"./App.css\";\n// App.jsなどJSファイルの先頭で\nimport cinecaptionTTF from './fonts/cinecaption226.ttf';\n\nconst fontFace = `\n@font-face {\n  font-family: \"Cinecaption\";\n  src: url(${cinecaptionTTF}) format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n`;\n\n// これをstyleタグとしてDOMに注入するなどで使う\n\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // フォントを動的にstyleタグで挿入する処理\n  useEffect(() => {\n    const style = document.createElement(\"style\");\n    style.textContent = `\n      @font-face {\n        font-family: \"Cinecaption\";\n        src: url(${cinecaptionTTF}) format(\"truetype\");\n        font-weight: normal;\n        font-style: normal;\n      }\n    `;\n    document.head.appendChild(style);\n\n    // クリーンアップ（念のため）\n    return () => {\n      document.head.removeChild(style);\n    };\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    console.log(\"検索されたタイトル:\", query);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <SearchBar onSearch={handleSearch} />\n      <CategoryList />\n      <MovieList category=\"popular\" query={searchQuery} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,cAAc;AACrB,OAAO,WAAW;AAClB;AACA,OAAOC,cAAc,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,QAAQ,GAAG;AACjB;AACA;AACA,aAAaH,cAAc;AAC3B;AACA;AACA;AACA,CAAC;;AAED;;AAGA,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IAC7CF,KAAK,CAACG,WAAW,GAAG;AACxB;AACA;AACA,mBAAmBX,cAAc;AACjC;AACA;AACA;AACA,KAAK;IACDS,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,KAAK,CAAC;;IAEhC;IACA,OAAO,MAAM;MACXC,QAAQ,CAACG,IAAI,CAACE,WAAW,CAACN,KAAK,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC9BT,cAAc,CAACS,KAAK,CAAC;IACrBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,KAAK,CAAC;EAClC,CAAC;EAED,oBACEd,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA,CAACN,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA,CAACL,SAAS;MAAC4B,QAAQ,EAAEV;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrCtB,OAAA,CAACJ,YAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBtB,OAAA,CAACH,SAAS;MAAC2B,QAAQ,EAAC,SAAS;MAACV,KAAK,EAAEV;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACnB,EAAA,CAnCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}